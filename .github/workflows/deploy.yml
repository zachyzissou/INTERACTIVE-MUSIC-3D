name: CI/CD - interactive-music-3d-unraid

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on:
      - self-hosted
      - interactive-music-3d

    env:
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: ðŸ§¾ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - '**/*'
              - '!docs/**'
              - '!README.md'

      - name: ðŸ”„ Restore Next.js cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: ðŸ”§ Set up Node.js
        if: steps.changes.outputs.src == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ðŸ“¦ Cache npm
        if: steps.changes.outputs.src == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: ðŸ“¦ Install dependencies
        if: steps.changes.outputs.src == 'true'
        run: npm ci --legacy-peer-deps

      - name: ðŸ”Ž Type-check, lint & build
        if: steps.changes.outputs.src == 'true'
        run: npx tsc --noEmit && npm run lint && npm run build

      - name: ðŸ›  Set up Docker Buildx
        if: steps.changes.outputs.src == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Rebuild & restart web container
        if: steps.changes.outputs.src == 'true'
        env:
          DOCKER_BUILDKIT: 1
        run: |
          echo "Building Docker image from workspace"
          docker buildx build \
            --load \
            --cache-from=type=local,src=./.buildcache \
            --cache-to=type=local,dest=./.buildcache,mode=max \
            -t interactive-music-web .
          echo "Stopping and removing old container if exists"
          docker rm -f interactive-music-web || true
          echo "Starting new container from built image"
          docker run -d --name interactive-music-web \
            --restart unless-stopped \
            -p 31415:3000 \
            interactive-music-web
